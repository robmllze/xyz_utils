// ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓
//
// TABLES
//
// Contains tables with pre-calculated values. This is an attempt to save
// processing power.
//
// By Robert Mollentze / @robmllze (2021)
//
// Please see LICENSE file.
//
// ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓

// ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//
// FACTORIAL
//
// ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

@deprecated
int factorialT20(final int a) {
  assert(a >= 0 && a < 20);
  return MT_20_INT_FACTORIALS[a];
}

@deprecated
const MT_20_INT_FACTORIALS = <int>[
  1, // 0
  1,
  2,
  6,
  24,
  120,
  720,
  5040,
  40320,
  362880,
  3628800,
  39916800,
  479001600,
  6227020800,
  87178291200,
  1307674368000,
  20922789888000,
  355687428096000,
  6402373705728000,
  121645100408832000,
  2432902008176640000,
];

double factorialT100(final int a) {
  assert(a >= 0 && a < 100);
  return MT_100_DOUBLE_FACTORIALS[a];
}

const MT_100_DOUBLE_FACTORIALS = [
  1.0,
  1.0,
  2.0,
  6.0,
  24.0,
  120.0,
  720.0,
  5040.0,
  40320.0,
  362880.0,
  3628800.0,
  39916800.0,
  479001600.0,
  6227020800.0,
  87178291200.0,
  1307674368000.0,
  20922789888000.0,
  355687428096000.0,
  6402373705728000.0,
  121645100408832000.0,
  2432902008176640000.0,
  51090942171709440000.0,
  1.1240007277776077e+21,
  2.585201673888498e+22,
  6.204484017332394e+23,
  1.5511210043330986e+25,
  4.0329146112660565e+26,
  1.0888869450418352e+28,
  3.0488834461171384e+29,
  8.841761993739701e+30,
  2.6525285981219103e+32,
  8.222838654177922e+33,
  2.631308369336935e+35,
  8.683317618811886e+36,
  2.9523279903960412e+38,
  1.0333147966386144e+40,
  3.719933267899012e+41,
  1.3763753091226343e+43,
  5.23022617466601e+44,
  2.0397882081197442e+46,
  8.159152832478977e+47,
  3.3452526613163803e+49,
  1.4050061177528798e+51,
  6.041526306337383e+52,
  2.6582715747884485e+54,
  1.1962222086548019e+56,
  5.5026221598120885e+57,
  2.5862324151116818e+59,
  1.2413915592536073e+61,
  6.082818640342675e+62,
  3.0414093201713376e+64,
  1.5511187532873822e+66,
  8.065817517094388e+67,
  4.2748832840600255e+69,
  2.308436973392414e+71,
  1.2696403353658276e+73,
  7.109985878048635e+74,
  4.052691950487722e+76,
  2.350561331282879e+78,
  1.3868311854568986e+80,
  8.320987112741392e+81,
  5.075802138772248e+83,
  3.146997326038794e+85,
  1.98260831540444e+87,
  1.2688693218588417e+89,
  8.247650592082472e+90,
  5.443449390774431e+92,
  3.647111091818868e+94,
  2.4800355424368305e+96,
  1.711224524281413e+98,
  1.197857166996989e+100,
  8.504785885678622e+101,
  6.123445837688608e+103,
  4.4701154615126834e+105,
  3.3078854415193856e+107,
  2.480914081139539e+109,
  1.8854947016660498e+111,
  1.4518309202828584e+113,
  1.1324281178206295e+115,
  8.946182130782973e+116,
  7.156945704626378e+118,
  5.797126020747366e+120,
  4.75364333701284e+122,
  3.945523969720657e+124,
  3.314240134565352e+126,
  2.8171041143805494e+128,
  2.4227095383672724e+130,
  2.107757298379527e+132,
  1.8548264225739836e+134,
  1.6507955160908452e+136,
  1.4857159644817607e+138,
  1.3520015276784023e+140,
  1.24384140546413e+142,
  1.1567725070816409e+144,
  1.0873661566567424e+146,
  1.0329978488239052e+148,
  9.916779348709491e+149,
  9.619275968248206e+151,
  9.426890448883242e+153,
  9.33262154439441e+155,
  9.33262154439441e+157,
];
